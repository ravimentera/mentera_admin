require('dotenv').config();
const axios = require('axios');
const fs = require('fs');

const API_KEY = 'AIzaSyD-uhDWhTk7eiyzgqMQ2aASAlorFE-dZRY';
const TEXT_SEARCH_URL = 'https://maps.googleapis.com/maps/api/place/textsearch/json';
const DETAILS_URL = 'https://maps.googleapis.com/maps/api/place/details/json';

// Define the area to search
const locations = [
  'San Francisco, CA',
  'Sacramento, CA',
  'San Jose, CA',
];

const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));

async function fetchAllPages(query) {
  let allResults = [];
  let nextPageToken = null;
  let page = 1;

  do {
    try {
      const response = await axios.get(TEXT_SEARCH_URL, {
        params: {
          query,
          key: API_KEY,
          pagetoken: nextPageToken
        }
      });

      const status = response.data.status;
      console.log(`Page ${page} Status:`, status);

      if (response.data.error_message) {
        console.error('Error Message:', response.data.error_message);
        break;
      }

      if (status !== 'OK' && status !== 'ZERO_RESULTS') break;

      const results = response.data.results || [];
      console.log(`Found ${results.length} results on page ${page} for: ${query}`);
      allResults.push(...results);

      nextPageToken = response.data.next_page_token;

      // Google API requires a short wait before using next_page_token
      if (nextPageToken) {
        await sleep(2000);
        page++;
      }
    } catch (error) {
      console.error('Error fetching text search results:', error.message);
      break;
    }
  } while (nextPageToken);

  return allResults;
}

async function fetchMedspas() {
  let results = [];

  for (const location of locations) {
    const query = `medical spa in ${location}`;
    console.log(`\n🔍 Searching: ${query}`);

    const places = await fetchAllPages(query);

    for (const place of places) {
      const placeId = place.place_id;

      try {
        const detailsResponse = await axios.get(DETAILS_URL, {
          params: {
            place_id: placeId,
            fields: 'name,formatted_address,website',
            key: API_KEY
          }
        });

        const details = detailsResponse.data.result;
        if (!details) {
          console.warn(`⚠️ No details found for place ID: ${placeId}`);
          continue;
        }

        results.push({
          name: details.name || 'N/A',
          address: details.formatted_address || 'N/A',
          website: details.website || 'N/A'
        });

        await sleep(150); // short delay to avoid throttling
      } catch (err) {
        console.warn(`Error fetching details for ${placeId}:`, err.message);
      }
    }
  }

  // Save to CSV
  const csvContent = 'Name,Address,Website\n' + results.map(r =>
    `"${r.name}","${r.address}","${r.website}"`
  ).join('\n');

  fs.writeFileSync('medspas.csv', csvContent);
  console.log(`✅ Done! ${results.length} medspas saved to medspas.csv`);
}

fetchMedspas();